[33m8d190c8[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m, [m[1;31morigin/main[m[33m)[m HEAD@{0}: reset: moving to HEAD~1
[33mbf7c8d9[m HEAD@{1}: commit: fixation exercise maybe on first try :P
[33m8d190c8[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m, [m[1;31morigin/main[m[33m)[m HEAD@{2}: commit: assisted exercise
[33mfa8cb38[m HEAD@{3}: commit: pipeline
[33mc7baf9e[m HEAD@{4}: commit: last try
[33mebf1dfb[m HEAD@{5}: commit: Gitignore ...
[33mf4fea55[m HEAD@{6}: commit: gitignore update
[33m3c06d1a[m HEAD@{7}: commit: stream
[33mac09723[m HEAD@{8}: commit: methods with lambda functionals as arguments
[33m2b8b854[m HEAD@{9}: commit: Inline lambda expression
[33m21e083c[m HEAD@{10}: commit: Declared lambda expression
[33mae29270[m HEAD@{11}: commit: non static reference method
[33m962eda4[m HEAD@{12}: commit: Static reference method
[33m12c38a0[m HEAD@{13}: commit: Interface implemantation
[33m36b5d55[m HEAD@{14}: commit: Inline lambda expression
[33me05720e[m HEAD@{15}: commit: Declared lambda expression
[33m8032687[m HEAD@{16}: commit: Non Static reference method
[33m5c1f3ef[m HEAD@{17}: commit: Static reference method
[33m7068c42[m HEAD@{18}: commit: Interface implementation
[33m1d589b8[m HEAD@{19}: commit: Inline lambda expression
[33m534efb9[m HEAD@{20}: commit: declared lambda expression
[33mfbb2945[m HEAD@{21}: commit: Non static reference method
[33m11818c7[m HEAD@{22}: commit: static reference method
[33mc9f0494[m HEAD@{23}: commit: Interface implemantation
[33mec907da[m HEAD@{24}: commit: Lambda (new version) a lot more succint, bloody good
[33m0737436[m HEAD@{25}: commit: Lambda (a lot less robust), nice, but there's a new way
[33m03fc9b2[m HEAD@{26}: commit: Lambda (a little less robust), but still kinda bad
[33mf1e65c7[m HEAD@{27}: commit: Lambda (More robust), kinda bad
[33mf1fb28c[m HEAD@{28}: commit: Anonymous class in main program
[33m79d38d1[m HEAD@{29}: commit: Standard comparator
[33mfbba15f[m HEAD@{30}: commit: Map fixation exercise
[33mcfae138[m HEAD@{31}: commit: Map - Intro 01
[33ma481438[m HEAD@{32}: commit: Set - Fixation Exercise
[33mb72d224[m HEAD@{33}: commit: assisted exercise - set
[33ma6699d7[m HEAD@{34}: commit: comparing using treeset
[33mb1be7e3[m HEAD@{35}: commit: comparing on set
[33m91a9c50[m HEAD@{36}: commit: Intro to HashSets, TreeSets and LinkedHashSets
[33m608f688[m HEAD@{37}: commit: Hashcode and Equal
[33m34a1559[m HEAD@{38}: commit: second delimited wildcards example
[33mc1bec6b[m HEAD@{39}: commit: first problem
[33mddb92a2[m HEAD@{40}: commit: intro to wildcard types
[33m7552af7[m HEAD@{41}: commit: gererics intro
[33m5b8c98b[m HEAD@{42}: commit: Interface Default Methods
[33m07c98d6[m HEAD@{43}: commit: comparable interface
[33m41c9de8[m HEAD@{44}: commit: Diamond problem
[33m3fa2cd9[m HEAD@{45}: commit: Using Inheritance + Interface
[33m1492dbe[m HEAD@{46}: commit: Renaming Folders and Fixation Exercise
[33m5d2f51a[m HEAD@{47}: commit: Fixation Exercise - Interfaces
[33m466a88c[m HEAD@{48}: commit: Solution with interface
[33ma85fe86[m HEAD@{49}: commit: Solution without interface
[33m3f04934[m HEAD@{50}: commit: Redoing exercise for memorization
[33mdea97b6[m HEAD@{51}: commit: File fixation exercise
[33m8389f38[m HEAD@{52}: commit: Information about folder/file or both
[33m9a2829b[m HEAD@{53}: commit: Manipulating files and folders
[33m55433e9[m HEAD@{54}: commit: FileWriter and Buffered Writer
[33m1e9a81f[m HEAD@{55}: commit: FileReader and BufferedReader
[33mba15e41[m HEAD@{56}: pull: Merge made by the 'ort' strategy.
[33md2d2e04[m HEAD@{57}: commit: Intro to File Manipulation
[33mecaeb2c[m HEAD@{58}: commit: gitignore
[33md41a480[m HEAD@{59}: commit: Remove .idea directories and update .gitignore
[33m95a3171[m HEAD@{60}: commit: fixation exercise exceptions chapter
[33m4fffe6f[m HEAD@{61}: commit: fixation exercise exceptions chapter
[33m4223484[m HEAD@{62}: pull: Fast-forward
[33mce557b9[m HEAD@{63}: pull: Fast-forward
[33m1305277[m HEAD@{64}: commit: Good Solution
[33m99fe132[m HEAD@{65}: commit: Good Solution
[33mfc80a7b[m HEAD@{66}: commit: gitgnore again...
[33m4a1f553[m HEAD@{67}: commit: gitignore fix
[33m98aeb30[m HEAD@{68}: pull: Fast-forward
[33m88c436e[m HEAD@{69}: commit: Bad solution
[33mc3b0360[m HEAD@{70}: commit: very bad solution
[33m04d2b60[m HEAD@{71}: commit: fixing all gitignores
[33m8af9bae[m HEAD@{72}: commit: gitignore fix
[33m8905ff7[m HEAD@{73}: commit: gitignore fix
[33m2775244[m HEAD@{74}: commit: gitignore fix
[33m009dd46[m HEAD@{75}: commit: gitignore fix
[33m039f006[m HEAD@{76}: commit: intro to finally
[33m2f2019a[m HEAD@{77}: commit: intro to exceptions
[33m1c9db31[m HEAD@{78}: commit: last exercise
[33m0ece1f1[m HEAD@{79}: commit: abstract methods
[33mb082a7e[m HEAD@{80}: commit: Reorganizing Folders Name
[33m5e2d00a[m HEAD@{81}: commit: abstract Class
[33m1c3a1bb[m HEAD@{82}: commit: first polymorphism exercise
[33m78dbaa8[m HEAD@{83}: commit: assisted exercise, might make one myself later
[33m938d58c[m HEAD@{84}: commit: polymorphism
[33m34b17c7[m HEAD@{85}: commit: override and usage of super
[33md47e58d[m HEAD@{86}: commit: upcasting and downcasting
[33mce634ad[m HEAD@{87}: commit: inheritance intro
[33m05da54d[m HEAD@{88}: commit: swapping a stringbuilder for a toString (cmon Nelio)
[33mfb051e2[m HEAD@{89}: commit: Composition Hard Exercise
[33m062ea22[m HEAD@{90}: commit: redoing
[33m9feb9fb[m HEAD@{91}: commit: second assisted exercise
[33mdc5e4a7[m HEAD@{92}: commit: assisted exercise
[33m40fdd72[m HEAD@{93}: commit: organizing folders
[33m5a9ded3[m HEAD@{94}: commit: first enums
[33m4de3f6d[m HEAD@{95}: commit: calculating using date/time
[33mc77bb63[m HEAD@{96}: commit: getting date/time values
[33m94466dd[m HEAD@{97}: commit: custom date/time
[33m763471c[m HEAD@{98}: commit: intro date/time
[33m6b4624f[m HEAD@{99}: commit: bidimensional array
[33m6ed6c99[m HEAD@{100}: commit: assisted exercise
[33m695703c[m HEAD@{101}: commit: learning lists and a bit of lambda
[33m1da3b1a[m HEAD@{102}: commit: lists
[33m4122ab3[m HEAD@{103}: commit: removing useless arrays
[33mac5a36b[m HEAD@{104}: commit: pensionato
[33m1e38b84[m HEAD@{105}: commit: people data
[33ma0f40c1[m HEAD@{106}: commit: approved students
[33mafe105f[m HEAD@{107}: commit: older person
[33m42235bd[m HEAD@{108}: commit: even average
[33m50f6189[m HEAD@{109}: commit: below average
[33m7b3ca96[m HEAD@{110}: commit: vectors sum
[33m8897214[m HEAD@{111}: commit: greater position
[33m18c4386[m HEAD@{112}: commit: even numbers
[33m55e1316[m HEAD@{113}: commit: heights
[33m4bee7e0[m HEAD@{114}: commit: vector_sum
[33m5769cff[m HEAD@{115}: commit: arrays exercise 01
[33m7ae57d8[m HEAD@{116}: commit: second array exercise
[33m28a5cdc[m HEAD@{117}: commit: array exercise
[33mdd8a109[m HEAD@{118}: commit: last changes, fixing else bug
[33mdcb518f[m HEAD@{119}: commit: Making a function for repetitive println
[33m9494320[m HEAD@{120}: commit: Making it better
[33m732644a[m HEAD@{121}: commit: Making it better
[33m2c1bf50[m HEAD@{122}: commit: new exercise added
[33m4d0954b[m HEAD@{123}: commit: Fixing Gitignore
[33mf0f9ffe[m HEAD@{124}: rebase (finish): returning to refs/heads/main
[33mf0f9ffe[m HEAD@{125}: rebase (pick): FIXING GITIGNORE
[33m962df50[m HEAD@{126}: rebase (start): checkout HEAD~4
[33m720d3f7[m HEAD@{127}: commit: FIXING GITIGNORE
[33m1ed3722[m HEAD@{128}: commit: .gitignore fix
[33m462cea0[m HEAD@{129}: commit: gitignore fix
[33m257d6cb[m HEAD@{130}: rebase (finish): returning to refs/heads/main
[33m257d6cb[m HEAD@{131}: rebase (pick): fixing GITIGNORE
[33m962df50[m HEAD@{132}: rebase (start): checkout HEAD~4
[33m40e076f[m HEAD@{133}: reset: moving to HEAD
[33m40e076f[m HEAD@{134}: commit: fixing GITIGNORE
[33m235e362[m HEAD@{135}: commit: okay now i fixed gitgnore
[33m8ae1c20[m HEAD@{136}: commit: fixing gitignore
[33m8aeca3d[m HEAD@{137}: commit: adding gitignore
[33m962df50[m HEAD@{138}: commit: New Exercise
[33mf5910b3[m HEAD@{139}: commit (amend): .
[33m7a21246[m HEAD@{140}: rebase (finish): returning to refs/heads/main
[33m7a21246[m HEAD@{141}: rebase (start): checkout HEAD~1
[33ma3cd8a9[m HEAD@{142}: commit (amend): test
[33mfca08e2[m HEAD@{143}: reset: moving to HEAD
[33mfca08e2[m HEAD@{144}: commit: test
[33m7a21246[m HEAD@{145}: commit: .
[33m84eac07[m HEAD@{146}: commit (initial): First Exercise
